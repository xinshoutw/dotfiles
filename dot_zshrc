# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
#typeset -g POWERLEVEL9K_INSTANT_PROMPT=on
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# >>> auto tmux >>>
# ZSH_TMUX_AUTOSTART=true
# <<< auto tmux <<<

export HOMEBREW_NO_ENV_HINTS=1

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
export PATH="$PATH:/opt/metasploit-framework/bin"
export PATH="$PATH:/opt/pycdc"
export PATH="$PATH:/Users/xinshou/chromedriver-mac-arm64"
export PATH="$PATH:/usr/local/Cellar/john/run"
export PATH="$PATH:/opt/homebrew/Cellar/john-jumbo/1.9.0_1/share/john"

#if [[ "$(uname -m)" == "arm64" ]]; then
    # export PATH="/opt/homebrew/bin:$PATH"
    # echo "Running on ARM architecture with ARM Homebrew"
#elif [[ "$(uname -m)" == "x86_64" ]]; then
#    export PATH="/usr/local/bin:$PATH"
    # echo "Running on x86 architecture with x86 Homebrew"
#fi

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"


# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

zstyle ':omz:update' mode auto      # update automatically without asking

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
	git
	zsh-autosuggestions
	zsh-syntax-highlighting
	tmux
	keychain
	gpg-agent
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8
export PATH="/opt/metasploit-framework/bin:$PATH"


# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Force sudo
alias btop="sudo btop"
alias top="sudo btop"
alias nmap="sudo nmap"

alias ttop="/use/bin/top"
alias py="python"
alias py3="python3"
alias cls="clear"
alias ncl="nc -nvl"
alias thm="cd ~/tryHackMe"
alias lll="ls -hcltr"
alias java11="/Library/Java/JavaVirtualMachines/microsoft-11.jdk/Contents/Home/bin/java"
alias java17="/Library/Java/JavaVirtualMachines/microsoft-17.jdk/Contents/Home/bin/java"
alias java21="/Library/Java/JavaVirtualMachines/microsoft-21.jdk/Contents/Home/bin/java"
alias java22="/Users/xinshou/Library/Java/JavaVirtualMachines/openjdk-22.0.2/Contents/Home/bin/java"
# alias brewx86="arch -x86_64 /usr/local/bin/brew"
alias x86="arch -x86_64 /usr/bin/env zsh"
alias arm="arch -arm64 zsh"
alias py3x86="/usr/local/bin/python3"
alias pc='proxychains4'

alias pi='ssh xs-pi'


# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

export PATH="/opt/homebrew/opt/icu4c@75/bin:$PATH"
export PATH="/opt/homebrew/opt/icu4c@75/sbin:$PATH"

# Added by LM Studio CLI (lms)
export PATH="$PATH:/Users/xinshou/.cache/lm-studio/bin"

export LC_ALL=en_US.UTF-8
export DISPLAY=:0

#HB_CNF_HANDLER="$(brew --repository)/Library/Taps/homebrew/homebrew-command-not-found/handler.sh"
#if [ -f "$HB_CNF_HANDLER" ]; then
#source "$HB_CNF_HANDLER";
#fi


curltime() {
    curl -so /dev/null -w "\
   namelookup:  %{time_namelookup}s\n\
      connect:  %{time_connect}s\n\
   appconnect:  %{time_appconnect}s\n\
  pretransfer:  %{time_pretransfer}s\n\
     redirect:  %{time_redirect}s\n\
starttransfer:  %{time_starttransfer}s\n\
-------------------------\n\
        total:  %{time_total}s\n" "$@"
}


. "$HOME/.local/bin/env"

eval "$(zoxide init zsh --cmd cd)"
